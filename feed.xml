<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>That C# guy</title>
    <description>Escribo sobre ciencias computacionales, principalmente enfocado a la programación de aplicaciones, pero con énfasis en C#, mi lenguaje favorito. A veces me da por escribir sobre tecnología también. 
</description>
    <link>http://thatcsharpguy.com/</link>
    <atom:link href="http://thatcsharpguy.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 11 Apr 2018 09:12:13 +0100</pubDate>
    <lastBuildDate>Wed, 11 Apr 2018 09:12:13 +0100</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>¿Qué es MapReduce?</title>
        <description>&lt;p&gt;Es un modelo de programación fuertemente orientado a la ejecución paralela y distribuida entre múltiples computadoras, que se utiliza para trabajar con grandes colecciones de datos, digamos, de unos cuantos terabytes (o petabytes). La idea de MapReduce es ofrecer una forma simple, rápida, escalable y resistente a fallos para manipular enormes cantidades de datos. En la terminología de MapReduce a estas manipulaciones se les conoce como trabajos, y así me referiré a ellos de ahora en adelante.&lt;/p&gt;

&lt;p&gt;MapReduce surgió de Google y fue presentado en 2004 por dos investigadores de Google, quienes lo publicaron en un paper y fue a partir de ahí que se comenzó a desarrollar en el mundo del open source a partir de ahí se generó una propuesta open source que funciona dentro de Hadoop (que por cierto es otra maravilla del Open Source originada en Google, de la cual si quieren les hablo en otro video). La realidad es que la explicación que voy a dar aquí es muy, muy básica, y los invito a leer el paper y a buscar más información y desde luego, a dejar sus preguntas en los comentarios, no es que yo pueda responderlas, pero seguro yo se las puedo preguntar a alguien más.&lt;/p&gt;

&lt;h2 id=&quot;composición&quot;&gt;Composición&lt;/h2&gt;
&lt;p&gt;Su nombre proviene de dos viejos conocidos de la programación funcional: las funciones Map y Reduce. Como su nombre lo indica,  se compone de dos etapas (en realidad hay tres, pero la tercera es transparente para el desarrollador): la etapa de Map o Mapeo y la etapa de Reduce o Reducción, un poco más adelante les hablaré a detalle de estas etapas.&lt;/p&gt;

&lt;p&gt;Como lo mencioné antes, MapReduce fue creado para ejecutarse en múltiples computadoras a la vez, distribuyendo así la carga del trabajo en ellas, cabe destacar que estas computadoras no tienen que ser supercomputadoras carísimas, sino que pueden ser computadoras simples y relativamente baratas, es por eso que cuando se habla de MapReduce, se habla de clusters de computadoras.&lt;/p&gt;

&lt;p&gt;Todas las computadoras que participan en un trabajo de MapReduce   contienen un agente que coordina sus recursos, conocido como el NodeManager, este NodeManager a su vez se comunica con el encargado de orquestar todo el trabajo, que es nada más y nada menos que otra computadora dentro del cluster, que contiene un programa llamado ResourceManager, encargado de orquestar toda la operación de un trabajo de MapReduce (este asigna los trabajos, se mantiene al tanto de el estado de cada uno de los NodeManagers y resigna un trabajo no completado si es que alguno de los nodos deja de responder).&lt;/p&gt;

&lt;h2 id=&quot;entradas-y-salidas&quot;&gt;Entradas y salidas.&lt;/h2&gt;
&lt;p&gt;Como igual mencioné brevemente al inicio del video, un trabajo de MapReduce tiene como objetivo el tomar una cantidad de datos (de un archivo, de una base de datos o cualquier otra fuente de datos), manipularla de alguna manera y entregar un resultado al final. Pese a lo que indica su nombre “reduce”, el archivo generado no necesariamente tiene que ser una versión reducida de la entrada, puede llegar a ser más grande.&lt;/p&gt;

&lt;p&gt;Su funcionamiento es más o menos el siguiente:&lt;/p&gt;

&lt;h3 id=&quot;mapping&quot;&gt;Mapping&lt;/h3&gt;
&lt;p&gt;De tu entrada de datos tomas un conjunto de información que tiene la forma de pares llave-valor, dentro de la fase del mapper realizas alguna especie de procesamiento sobre ellos, como podría ser separar una cadena por espacios en blanco, encontrar todos los links que contiene un documento web. La idea es que del mapper generes un nuevo conjunto de datos, de nuevo en la forma de llave-valor, aquí cabe señalar que no es necesario que las llaves ni los valores sean los mismos que en los archivos de entrada, pueden ser totalmente diferentes.&lt;/p&gt;

&lt;h3 id=&quot;shuffling&quot;&gt;Shuffling&lt;/h3&gt;
&lt;p&gt;A la salida de los mappers se ejecuta otra etapa, conocida como shuffling, que se encarga de ordenar los datos generados de acuerdo a la llave que tu les asignaste en el mapper. Una vez que se ejecutó la fase de shuffling, los datos están listos para ser consumidos por los reducers.&lt;/p&gt;

&lt;h3 id=&quot;reducing&quot;&gt;Reducing&lt;/h3&gt;
&lt;p&gt;La tarea de los reducers comienza al ir a recuperar la información de los mappers, cada reducer tendrá la tarea de procesar todos los datos asignados a una sola llave a la vez. En el Reducer tenemos la oportunidad de realizar otro procesamiento sobre los valores, pero ahora con la certeza de que toda la información que tenemos está identificada con una sola llave.&lt;/p&gt;

&lt;p&gt;El reducer, al igual que el mapper, tiene la tarea de generar un nuevo conjunto de información en la forma llave-valor, la cual es depositada nuevamente en un archivo.&lt;/p&gt;

&lt;h2 id=&quot;claves&quot;&gt;Claves&lt;/h2&gt;

&lt;p&gt;Sí, sé que ese asunto de las llaves-valor puede sonar complicado al inicio, pero después de haber implementado una versión muy básica del primer PageRank de Google en MapReduce (dejo el link al post en la descripción) puedo identificar algunas claves:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pensar en forma paralela, y tratar de olvidar temporalmente todos los otros paradigmas que tengas en mente.&lt;/li&gt;
  &lt;li&gt;Que al momento de trabajar en los mappers no vas a tener toda la información que necesitas en un solo lugar, ve a los mappers como una etapa de preparación de la información.&lt;/li&gt;
  &lt;li&gt;Que si quieres que algo se ejecute en un solo lugar, eso sería del lado de los reducers, y para que esto suceda todos los elementos que quieres en un lugar deben tener la misma llave.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;el-hola-mundo&quot;&gt;El Hola Mundo&lt;/h2&gt;
&lt;p&gt;El hola mundo del MapReduce es un ejemplo de conteo de palabras que te voy a tratar de explicar ahora mismo. Imagina que tienes el siguiente texto:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Cuando cuentes cuentos
Cuenta cuantos cuentos cuentas
Por que si no cuentas cuantos cuentos cuentas 
Nunca sabrás cuantos cuentos cuentas
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una forma de contar las palabras usando MapReduce es la siguiente:&lt;/p&gt;

&lt;p&gt;Los mappers reciben fragmentos del texto, separados por lineas, la información es recibida de la siguiente manera, cada linea es un valor, y la llave de ese valor es el número de línea dentro del archivo. Dentro del mapper, tomamos cada línea y la separamos por espacios, tomamos cada una de esas palabras como llaves y les asociamos como valor un uno y los escribimos a la salida.&lt;/p&gt;

&lt;p&gt;La tarea del shuffler será ordenar esta información por la llave , algo así:&lt;/p&gt;

&lt;p&gt;Después, esta información es obtenida por los reducers, recuerda que los reducers tomarán todos los elementos asociados con una sola llave y los procesarán dentro de ellos.&lt;/p&gt;

&lt;p&gt;En el reducer, se ejecuta un proceso que toma todos los números asociados a una palabra y los suma, tan solo para al final escribir a la salida otro par llave valor, en donde la llave es la palabra y el valor es el número de veces que aparece dicha palabra en el archivo.&lt;/p&gt;

&lt;h2 id=&quot;usos-y-limitaciones&quot;&gt;Usos y limitaciones&lt;/h2&gt;
&lt;p&gt;Por regla general se usa MapReduce cuando queremos afrontar problemas relacionados con grandes, enormes cantidades de datos. Y es por eso que se considera que debe correr en un sistema de archivos distribuidos, como es el caso de HDFS (Hadoop Distributed File System).&lt;/p&gt;

&lt;p&gt;Si bien MapReduce es una propuesta para paralizar y distribuir el cómputo sobre grandes cantidades de datos, tenemos que tener en cuenta que no todos los problemas son susceptibles de afrontarse usándolo, y tampoco es una solución buena para trabajos que requieren de respuesta en tiempo real, MapReduce es más bien para procesamiento offline de información.&lt;/p&gt;
</description>
        <pubDate>Mon, 19 Feb 2018 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/mapreduce/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/mapreduce/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>Python</title>
        <description>&lt;h1 id=&quot;python&quot;&gt;Python.&lt;/h1&gt;

&lt;p&gt;Como muchos de ustedes ya sabrán, Python es un lenguaje de programación, que como muy pocos seguramente saben, tomó su nombre no de una serpiente, si no de un programa de comedia británico, pero en fin. Python fue publicado en 1991 por Guido van Rossum, inicialmente fue pensado como un simple lenguaje de scripting pero en la actualidad se ha infiltrado en el desarrollo web, la ciencia de datos, machine learning y ramas afines.&lt;/p&gt;

&lt;h2 id=&quot;filosofía&quot;&gt;Filosofía.&lt;/h2&gt;

&lt;p&gt;La filosofía detrás de Python podría estar resumida en un documento que fue creado en 1999, ocho años después de su creación. Pueden consultar el documento en este enlace: pero les voy a decir algunos de estos principios que sí, suenan muy filosóficos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Beautiful is better than ugly&lt;/li&gt;
  &lt;li&gt;Explicit is better than implicit&lt;/li&gt;
  &lt;li&gt;Simple is better than complex&lt;/li&gt;
  &lt;li&gt;Readability counts&lt;/li&gt;
  &lt;li&gt;There should be one—and preferably only one—obvious way to do it.&lt;/li&gt;
  &lt;li&gt;If the implementation is hard to explain, it’s a bad idea.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lo cierto es que mientras que estos principios suenan bonitos, el escribir software todavía recae en los humanos, así que estos principios no se aplican muchas veces. Y, por ejemplo, puedes encontrar que en Python es normal que encuentres más de una manera de hacer las cosas.&lt;/p&gt;

&lt;h2 id=&quot;características&quot;&gt;Características&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Es dinámicamente tipado&lt;/strong&gt;: Porque podemos hacer algo como esto:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;a = 1
b = 'C'
c = [0.1, 0.5]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Es decir, no es necesario especificar el tipo de dato de una variable antes de declararla. Y no existe un compilador, ni el intérprete, que esté comprobando esto antes de que el programa se esté ejecutando.&lt;/p&gt;

&lt;p&gt;También permite algo como esto:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 1
a = 'C'
a = [0.1, 0.5]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Es decir, cambiar por completo el tipo de dato de una variable sin que nadie diga nada. Y créanme, esto puede ser motivo de muchas confusiones, pero una vez que te acostumbras, puede llegar a ser una herramienta muy útil.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sin embargo, también es considerado un lenguaje &lt;strong&gt;fuertemente tipado&lt;/strong&gt; (cabe recalcar que puede existir esta combinación: dinámico y fuertemente tipado a la vez). Es considerado fuertemente tipado porque el lenguaje define un conjunto de reglas (de comportamientos) bajo las cuales los tipos de dato se pueden mezclar entre ellos, y romper esas reglas generará una excepción. Toma por ejemplo el siguiente código:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;a3 = &quot;a&quot; + 3 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;por increíble que parezca, esto nos generaría un error puesto que los tipos de dato int y string no definen una forma de mezclarse, si quieres concatenar las cadenas tendrías que primero convertir el entero a cadena.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;No existen los corchetes (o llaves)&lt;/strong&gt;: sino que los bloques de código se definen usando indentaciones, es decir un bloque &lt;code&gt;if&lt;/code&gt; se define de la siguiente manera:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;if b == 'C':
	print(&quot;b es C&quot;)
elif b == 'A':
	print(&quot;b es A&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O un código un poco más complejo se vería así:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def del_none(d):
    for key, value in list(d.items()):
        if value is None:
            del d[key]
        elif isinstance(value, str):
            d[key] = d[key].strip()
        elif isinstance(value, dict):
            del_none(value)
    return d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ah, seguramente lo notaste, pero Python tampoco requiere que uses un &lt;code&gt;;&lt;/code&gt; para terminar cada instrucción, la idea es que exista una instrucción por cada línea.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;como tal vez pudiste ver, es también un &lt;strong&gt;lenguaje de alto nivel&lt;/strong&gt;: La idea es abstraer (esconder) la mayor cantidad de detalles de implementación. Es un lenguaje de alto nivel y en ocasiones es muy sencillo leer programas escritos en este lenguaje, y a mi parecer, en muchos casos como si estuvieras leyendo un libro escrito en inglés.&lt;/li&gt;
  &lt;li&gt;Python es también &lt;strong&gt;multiparadigma&lt;/strong&gt;, puedes organizar tu código en clases, o utilizarlo como un lenguaje funcional, o puedes simplemente crear un programa que se ejecute proceduralmente… o una combinación de todo esto.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Altamente extensible&lt;/strong&gt;: tiene soporte para descargar módulos o bibliotecas de repositorios de paquetes que permiten que añadirle funcionalidad a tus programas, así que es normal que cuando descargues un proyecto tengas que descargar los paquetes asociados con instrucciones como las siguientes:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;pip install package-name
easy_install package-name
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;desventajas&quot;&gt;Desventajas&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Considerado &lt;strong&gt;lento&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;A pesar de ser muy usado, hay áreas en las que no tiene mucho impacto, como el desarrollo para móviles.&lt;/li&gt;
  &lt;li&gt;Consume mucha memoria.&lt;/li&gt;
  &lt;li&gt;Puede hacer que otros lenguajes sean difíciles de trabajar, uno se acostumbra muy rápido a las bondades de Python, a mi de pronto ya se me olvida poner puntos y coma en C#&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 05 Feb 2018 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/python/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/python/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>¿Dormir o programar?</title>
        <description>&lt;p&gt;Este es un video más como de opinión, y quisiera comenzar diciendo esto: no dormir no es una medalla de honor, y el hecho de no dormir lo suficiente por estar trabajando o haciendo tarea no debe presumirse como un logro. Esto podría sonar raro, pero me parece que es algo muy común en el el ambiente de la programación de aplicaciones, aunque también lo he escuchado en otras profesiones, como entre los médicos.&lt;/p&gt;

&lt;p&gt;Claro, hay veces en que puede ser necesario: te encontraste con algo que es realmente complicado, tal vez tuviste que ayudar a alguien más o cuidar de tus hijos… También hay ocasiones en las que quedarse despierto puede ser divertido, como es el caso de algunos hackatones, conferencias o, las ya viejas, LAN parties. Sea cual sea la razón, a veces es necesario o divertido quedarse despierto, pero en mi opinión, no debes dejar que se convierta en un modo de vida.&lt;/p&gt;

&lt;p&gt;Hubo una etapa en mi vida en la que pensaba que dormir era una pérdida de tiempo: siempre tenía que “estar haciendo algo productivo”; pero eso ha cambiado, pues resulta que me di cuenta de que dormir el tiempo correcto es hacer algo productivo, dormir el tiempo necesario es no es un gasto, sino una inversión, y una muy buena. Seguramente ya te has desvelado antes, y sabes lo terrible que se siente al día siguiente:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Estás de mal humor,&lt;/li&gt;
  &lt;li&gt;te duele la cabeza,&lt;/li&gt;
  &lt;li&gt;no te dan muchas ganas de hablar con nadie,&lt;/li&gt;
  &lt;li&gt;te sientes desanimado y sin creatividad,&lt;/li&gt;
  &lt;li&gt;y te resulta imposible concentrarte…&lt;/li&gt;
  &lt;li&gt;¡además de que te andas quedando dormido en todos lados!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pero bueno, piénsalo… si algo se te complicó y empezaste a trabajar por la tarde y la noche se aproxima, cuando menos de das cuenta comienzas a tener sueño y a bostezar, ¿qué haces? ¿te vas a dormir? O, si ya trabajas, ¿qué pasa si por alguna razón el desarrollo de un módulo se retrasó y el cliente ya lo espera para la mañana siguiente? Cualquier escenario que te lleve al extremo ¿o vas por una lata de RedBull o una taza de café para seguir trabajando? ¿Qué haces normalmente, cuéntanos en los comentarios? ¿Te ha pasado algo similar o sueles desvelarte, cuéntanos?&lt;/p&gt;

&lt;p&gt;En mi opinión, muchas veces el tener que quedarse despierto para terminar algo es algo que puede atacarse de manera productiva, y si te toca desvelarte muy seguido por esta razón, deberías tratar de encontrar las causas que te llevan a no dormir para tratar de eliminarlas.&lt;/p&gt;

&lt;p&gt;También es cierto, y volviendo a lo que comenté al inicio del video, muchas compañías hacen de el no dormir una especie de medalla invisible, y digo invisible porque la verdad es que dudo mucho que alguien se atreva a poner un cuadro del tipo “empleado del mes” pero que diga “el que menos duerme”. Este tipo de medallas es algo que a veces nos presumimos entre nosotros, no se imaginan la cantidad de veces que oí, y yo mismo dije: “Me quedé despierto hasta las tres haciendo esto” o “Wey, llevo dos días sin dormir por terminar X o Y”, al principio puede sonar divertido y ser un motivo de orgullo, pero con el tiempo esto no va a hacer nada más que afectar tu desempeño y salud.&lt;/p&gt;

&lt;p&gt;Aunque a veces también pasa que te sientes taaaan inspirado que prefieres terminar lo que estás haciendo antes de ir a dormir, mi consejo es: No lo hagas, no vale la pena sacrificar una parte de (o todo) el día siguiente por trabajar dos o tres horas más durante la noche. Mi recomendación es que te tomes 5 minutos para escribir tu idea en la parte del código en la que estás trabajando, o de plano agarres una hoja de papel y la escribas ahí, y una vez hecho esto, te vayas a dormir sin remordimientos. Si la idea que tenías en mente antes de dormir era tan buena, cuando te despiertes por la mañana va a seguir ahí.&lt;/p&gt;

&lt;p&gt;Si dormir el tiempo necesario para descansar es un lujo que tu te puedes dar, créeme, dátelo. Duerme lo necesario, tu teclado (y el problema que estás enfrentando) seguirá ahí a la siguiente mañana.&lt;/p&gt;
</description>
        <pubDate>Sat, 27 Jan 2018 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/dormir-programar/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/dormir-programar/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>YouTube</title>
        <description>&lt;p&gt;Como algunos de ustedes sabrán si es que siguen a otros canales, recientemente YouTube cambió las políticas para pertenecer a su programa de asociados, este programa de asociados incluye entre otras cosas, la habilidad de poner anuncios en los videos y la habilidad de poner links hacia sitios externos como este que es mi blog.&lt;/p&gt;

&lt;p&gt;En fin, a pesar de que YouTube dice que la visibilidad de los videos en el sitio no se verá afectada por si perteneces o no a este programa, la verdad es que yo no confío mucho en eso y no quisiera dejar de pertenecer a este programa. Los requisitos nuevos son tener más de 1,000 suscriptores los cuales, requisito que ya está cumplido gracias a ustedes, y 4000 horas de visualizaciones en los 12 meses anteriores, y es aquí en donde este canal se queda corto.&lt;/p&gt;

&lt;p&gt;Es por eso que ahora quisiera pedirles un favor, a los nuevos suscriptores, les pido que se den una vuelta por los videos más viejos y los vean, sé que si encontraron útiles los videos más recientes, los anteriores también les van a servir. Y a todos los demás en general, les pido que si conocen a alguien a quién le podría interesar de lo que hablo aquí, le cuenten de este canal, en una de esas les resulta de interés y se suscriben.&lt;/p&gt;

&lt;p&gt;Por estas dos cosas que les estoy pidiendo, muchas gracias.&lt;/p&gt;

&lt;p&gt;Fue hace como dos años que decidí comenzar a subir videos a YouTube, la idea era tratar de explicar cosas que en su momento me costaron un poco de trabajo entender y tratar de explicarlas de un modo en el que a mi me hubiera gustado que me las explicaran. En ese entonces ya sabía de sobremanera que YouTube no es un negocio rentable por si solo para el 99% de la gente que sube sus videos, es por eso que desde el inicio, la motivación de estar aquí no fue el dinero, sino las ganas de compartir mis conocimientos y aprender de la gente que deja sus comentarios en cada uno de los videos que hago. Yo seguiré haciendo videos de lo que sé y de lo que ustedes me digan que les podría resultar de utilidad. En fin, gracias por ver este video, ya pronto subiré otro con algo que si sea de utilidad, pero hasta entonces, nos vemos la próxima.&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Jan 2018 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/sobre-youtube/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/sobre-youtube/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>La evaluación perezosa</title>
        <description>&lt;p&gt;En programación la evaluación perezosa, o llamada por necesidad, o por su nombre en inglés: lazy evaluation. Es una técnica de evaluación, sí porque hay varias técnicas, que consiste en retrasar el cálculo (o ejecución) de una instrucción hasta que en realidad es necesaria.&lt;/p&gt;

&lt;p&gt;Pero bueno, antes de entrar en detalles vamos a ver rápidamente otra estrategia, que podríamos definir como lo opuesto a la perezosa y esta es la evaluación temprana.&lt;/p&gt;

&lt;p&gt;Este tipo de evaluación es la que normalmente usa tu lenguaje de programación, y por tanto creo que sin quererlo estás muy familiarizado con ella, ocurre cuando asignas una variable como un entero o una cadena:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var a = &quot;Evaluación temprana&quot;; // C#
a = &quot;Evaluación temprana&quot; # Python
String a = &quot;Evaluación temprana&quot;; // Java
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero esto es demasiado simple, mejor vamos a ver algo más complejo. Imagina que vamos a trabajar con números del 0 al 10,000. Esta sería una forma de obtenerlos:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var numeros = Enumerable.Range(0, 10000).ToArray(); // C#
numeros = list(range(0, 10000)) # Python
int[] numeros = IntStream.range(0, 10000).toArray(); // Java 8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Es decir, el valor asociado con la variable es inmediatamente calculado (o evaluado) en el momento en el que se realiza la asignación, independientemente del momento en el que va a ser usado, si es que va a ser usado del todo. La sintaxis para crear estos arreglos es un poco rara, y es que los estamos forzando a ser evaluados tempranamente.&lt;/p&gt;

&lt;p&gt;Por el contrario, y volviendo al tema principal de este video, en la evaluación perezosa los valores no son creados o calculados hasta que no se hace referencia a ellos después de declararlos.&lt;/p&gt;

&lt;p&gt;Un excelente ejemplo de la evaluación perezosa viene cuando estamos trabajando con colecciones de valores, imagina que quieres obtener una colección de valores… como por ejemplo, volviendo a los 0 al 10,000, esta es la forma de obtenerlos sin tener que calcularlos todos en el momento en el que lo definimos, es decir, utilizando la evaluación perezosa:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var numeros = Enumerable.Range(0, 10000); // C#
numeros = range(0, 10000) # Python
int[] numeros = IntStream.range(0, 10000); // Java 8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esto tiene varias ventajas como:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Incremento en el desempeño de la aplicación ya que se evita el hacer cálculos que no necesita&lt;/li&gt;
  &lt;li&gt;Posibilidad de escribir código “infinito” o sin límites de espacio puesto que los valores son generados “uno a la vez”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pero bueno, hasta ahora todo bien, pero cómo es que podemos crear nosotros código que se evalúe perezosamente. En concreto yo les voy a hablar de Python y C#, que básicamente utilizan la misma palabra reservada y esta es &lt;code&gt;yield&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Con la palabra reservada &lt;code&gt;yield&lt;/code&gt; se utiliza como la palabra &lt;code&gt;return&lt;/code&gt; (y de hecho en C# se usan en conjunto) salvo que, a diferencia de usar return, &lt;code&gt;yield&lt;/code&gt; se usa para indicar que nuestra función ha producido un resultado, pero… que no ha terminado de ejecutarse y que puede producir otro valor.&lt;/p&gt;

&lt;p&gt;Toma por ejemplo este código (escrito en Python) que se usa para generar, teoricamente, una cantidad infinita de números de Fibonacci:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# https://stackoverflow.com/a/32930351/605482
# https://ideone.com/LE9Xsa

def getFibonacci():
    yield 0
    a, b = 0, 1
    while True:
        yield b
        b = a + b
        a = b - a
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;// https://stackoverflow.com/a/32930351/605482
// https://ideone.com/fBSdLy
IEnumerable&amp;lt;int&amp;gt; GetFibonacci()
{
    yield return 0;
    int a = 0, b = 1;
    while(true)
    {
        yield return b;
		    b = a + b;
		    a = b - a;
	    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A pesar de que tiene un ciclo infinito ahí al momento de calcular el siguiente número, no significa que esté calculando todos desde un inicio, sino que los va calculando conforme nuestro código los va necesitando.&lt;/p&gt;

&lt;p&gt;El tipo de retorno del método &lt;code&gt;getFibonacci&lt;/code&gt; es un &lt;code&gt;generator&lt;/code&gt; en lugar de una lista o un arreglo. Este &lt;code&gt;generator&lt;/code&gt; es quien facilita la evaluación perezosa.&lt;/p&gt;

&lt;p&gt;El código en C# es muy, muy similar, con las modificaciones apropiadas, y cambiando la palabra &lt;code&gt;yield&lt;/code&gt; por &lt;code&gt;yield return&lt;/code&gt; nuestro código realiza la misma tarea. Eso sí, a diferencia de Python, acá se regresa un tipo de dato llamado &lt;code&gt;IEnumerable&lt;/code&gt;. Ambos, tanto &lt;code&gt;generator&lt;/code&gt; como &lt;code&gt;IEnumerable&lt;/code&gt; se comportan igual.&lt;/p&gt;

&lt;p&gt;Una vez obtenido un &lt;code&gt;generator&lt;/code&gt; o uno &lt;code&gt;IEnumerable&lt;/code&gt; basta con usarlos dentro de un ciclo &lt;em&gt;foreach&lt;/em&gt; o ir extrayendo elementos con la función &lt;code&gt;next&lt;/code&gt; y el método &lt;code&gt;First&lt;/code&gt;, respectivamente:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# https://ideone.com/LE9Xsa
fibonaccis = getFibonacci()
print(&quot;Primer número&quot;, next(fibonaccis))

for num in fibonaccis:
    if num &amp;gt; 30000:
        break
    print(&quot;Siguiente número&quot;, num)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;// https://ideone.com/fBSdLy
var fibonaccis = GetFibonacci();
Console.WriteLine(&quot;Primer número &quot; + fibonaccis.First());

foreach(var num in fibonaccis)
{
    if(num &amp;gt; 30000)
        break;
    Console.WriteLine(&quot;Siguiente número &quot; + num);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Escribí un post sobre &lt;code&gt;yield&lt;/code&gt; en C# por si es que les interesa conocer más a detalle. Así mismo, dejo enlaces a todo el código en la descripción. Ah, y por cierto, hay otro tipo de evaluación  llamada evaluación corto-circuitada… tiene un nombre peculiar pero no es nada complicada, escribí también un post sobre eso, dejo el link en la descripción.&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Jan 2018 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/lazy-evaluation/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/lazy-evaluation/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>La escuela, otra vez</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Mi opinión de la escuela, después de haber pasado más 15 años de estudiar voluntariamente, debe servir para tres cosas y las voy a decir en orden de importancia:
    &lt;ul&gt;
      &lt;li&gt;enseñar los temas de los que se trata es decir, que si el curso es de matemáticas, aprendas matemáticas.&lt;/li&gt;
      &lt;li&gt;enseñar a aprender el tema del que se trata, volviendo al ejemplo de las matemáticas, que aprendas a aprender matemáticas, que te enseñen como estudiar&lt;/li&gt;
      &lt;li&gt;Inspirar a aprender el tema, muy pocos cursos y profesores llegan a este nivel. Si un profesor (o su curso) te inspiran a aprender la materia de la que se trata, me parece que es el mayor logro&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 22 Dec 2017 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/escuela-otra-vez/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/escuela-otra-vez/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>Las expresiones lambda</title>
        <description>&lt;p&gt;Las expresiones lambda o funciones lambda, o, por su nombre correcto: las funciones anónimas son bloques de código que NO están asociados con un identificador… es decir, en tiempo de ejecución no tienen un nombre asociado. Como por ejemplo estas que son funciones (o métodos) pero si tienen un nombre:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ejemplos&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Como puedes ver, todos estos ejemplos las funciones están asociados fuertemente con un nombre. Mientras que en el caso de las expresiones lambda esto no es necesario. Estos son ejemplos de expresiones lambda que definen lo mismo que los métodos anteriores.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ejemplos&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;sintaxis&quot;&gt;Sintaxis&lt;/h2&gt;

&lt;p&gt;Para definirlas la sintaxis varía de lenguaje a lenguaje, sin embargo generalmente la sintaxis es algo como esto:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Argumentos - Operador - (Contenido)Expresión
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;c&quot;&gt;C&lt;/h3&gt;
&lt;p&gt;En C# se define de la siguiente manera:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(int x) =&amp;gt; { return x*x; };
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(int x) =&amp;gt; 
{ 
	var x_squared = x*x;
	return x_squared; 
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En C# podemos no usar los paréntesis siempre y cuando se trate de una expresión lambda de 1 solo argumento… ah, y podemos quitar los corchetes, y la palabra &lt;code&gt;return&lt;/code&gt; siempre y cuando el contenido de la lambda sea una sola expresión.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x =&amp;gt; x*x;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;python&quot;&gt;Python&lt;/h3&gt;

&lt;p&gt;Usando Python la cosa cambia un poco, pero verás que la estructura sigue siendo la misma, tenemos algo así:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lambda x: x*x;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En Python no hay nada más que hacer, no hay que usar paréntesis para especificar multiples argumentos, basta con separarlos con una coma. Sin embargo existe una desventaja: las lambdas en este lenguaje solamente deben contener una expresión.&lt;/p&gt;

&lt;h3 id=&quot;javascript&quot;&gt;JavaScript&lt;/h3&gt;

&lt;p&gt;JavaScript es muy similar a C#:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;exp1 = (x) =&amp;gt; { return x*x; };
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;exp4 = x =&amp;gt; 
{ 
	x_squared = x*x;
	return x_squared; 
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En el sentido de que se puede reducir la expresión lambda siempre y cuando el cuerpo de la expresión lambda sea… una sola expresión.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;exp3 = x =&amp;gt; x*x;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Existen también en Java (aunque ahí son un poco raras), en Go, Haskell, C++, PHP… y en muchos más.&lt;/p&gt;

&lt;h2 id=&quot;razón-de-ser&quot;&gt;Razón de ser&lt;/h2&gt;

&lt;p&gt;Pero, ¿para qué querríamos escribir este tipo de expresiones?  Las expresiones lambda nos ayudan a&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Evitarnos el escribir código innecesario, y a la vez evitarnos llenar nuestro código de lógica que solamente vamos a usar una sola vez o en una sola parte del código. Si, por ejemplo, necesitas ejecutar una operación sobre un conjunto de elementos, tal vez sea mejor usar una expresión lambda que crear un método o una función que nadie más va a usar.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reducir la complejidad de nuestro código al evitarnos tener que navegar entre lineas para llegar a la definición de una función. La lectura del código se hace más sencilla, puesto que la definición del método está más a la vista de quien la está usando y no tiene que andar navegando entre todo el laberinto de código.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Nos ayudan a crear funcionalidad que luego puede ser pasada como argumentos a otras funciones, llamadas funciones de orden superior. Esto no es una cosa exclusiva de este tipo de expresiones, pero sin duda lo hace más sencillo.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como podrás imaginarte, las funciones anónimas están relacionadas muy fuertemente con la programación funcional, de la cual ya les hablé en el pasado, sin embargo no es el único paradigma de programación en el que se le puede encontrar.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Dec 2017 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/expresiones-lambda/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/expresiones-lambda/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>Los Jupyter Notebooks</title>
        <description>&lt;p&gt;Los Notebooks de Jupyter son unas hojas de código interactivas…&lt;/p&gt;

&lt;p&gt;El código ya es interactivo por si mismo, puedes modificarlo, ejecutarlo a tu antojo… pero el tipo de interactividad que ofrecen los Jupyter Notebooks es algo distinto, pero vamos a ver algo de historia…&lt;/p&gt;

&lt;p&gt;La idea detrás de estos Notebooks proviene de IPython que es un proyecto orientado a ofrecer una consola interactiva para trabajar con el lenguaje de programación Python (este proyecto fue iniciado por Fernando Pérez, un físico desarrollador de software colombiano), el proyecto, que ya era de por si interesante, tuvo una adición importantísima en 2011 con la aparición de los IPython Notebooks (ahora llamados Jupyter Notebooks) para convertirse en un entorno con el cual podemos interactuar a través de un navegador. Básicamente la idea era ofrecer un entorno para facilitar la tarea de la programación orientada al ámbito científico, sin embargo, también tiene un uso genérico con gran potencial. Espero veas por qué con esta rápida introducción.&lt;/p&gt;

&lt;p&gt;Permite trabajar con gráficas, ecuaciones, videos, imágenes, simuladores y desde luego, código. Todo… combinado. Imagina: combinar las características de un entorno simple de programación (como el &lt;em&gt;syntax highlighting&lt;/em&gt; y auto-completado) con la habilidad de poder escribir texto enriquecido junto al código. La idea es que sirva para documentar lo más posible alguna tarea que estamos realizando, tan solo para después tomar solo el código y llevarlo a una aplicación productiva. Además ofrece posibilidades para que cada uno de estos Notebooks sea evaluado automáticamente, lo cual también los hace ideales para hacer prácticas escolares, y de hecho, en la universidad ya he tenido ya varias prácticas así.&lt;/p&gt;

&lt;p&gt;Los Notebooks se crean con la Notebook App, que es una aplicación que está compuesta por dos componentes en una arquitectura cliente-servidor.&lt;/p&gt;

&lt;p&gt;La parte del cliente es el editor de código con el cual creamos y modificamos los Notebooks; este editor basado en HTML, CSS y JavaScript es el que usamos a través de un navegador web, aquí es donde escribimos el código y vemos los resultados de ejecutarlo.&lt;/p&gt;

&lt;p&gt;Mientras que el servidor se encarga de ejecutar el código que nosotros introducimos en los Notebooks y devolver los resultados al cliente. Este servidor es una especie de servidor web que a cada una de estas hojas interactivas les asigna un hilo de ejecución dentro de la computadora en la que está corriendo, y es en realidad dentro de este hilo de ejecución en donde se ejecuta nuestro código. El cliente y el servidor se comunican a través de peticiones HTTP y WebSockets.&lt;/p&gt;

&lt;p&gt;Al ser de código abierto (y al tener una gran comunidad detrás) tiene muchas posibilidades de ser expandido mediante Widgets que   los dotan de mayor funcionalidad. Entre estos Widgets están algunos que permiten trabajar con información geoespacial, video y audio, crear  tablas paginadas o crear una “interfaz amigable” para modificar el código. Y es también gracias a la comunidad que soporta diversos lenguajes de programación aparte de los con que fue creado en mente: Julia, Python y R. Inclusive se puede utilizar junto con C#… aunque el soporte todavía no es muy bueno.&lt;/p&gt;

&lt;p&gt;Si eres fan de C#, existe algo muy parecido pero lamentablemente no tiene tanta flexibilidad como los Notebooks de Jupyter, se llaman los Xamarin Workbooks, escribí un post sobre ellos, dejo el enlace en la descripción.&lt;/p&gt;

&lt;p&gt;Pero bueno, si quieres comenzar a usar los Notebooks pero eres un novato como yo, mi recomendación es que instales &lt;a href=&quot;http://jupyter.readthedocs.io/en/latest/install.html#id3&quot;&gt;Anaconda&lt;/a&gt;, que es otra gran herramienta, pero de la cual por el momento solo nos interesa usar los Notebooks. En la siguiente parte de este video les mostraré en un Notebook en acción.&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Dec 2017 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/jupyter-notebooks/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/jupyter-notebooks/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>Memoización</title>
        <description>&lt;p&gt;Sí, memoización, no, no memorización.&lt;/p&gt;

&lt;p&gt;La memorización es una técnica de optimización  usada en la programación que consiste en almacenar los resultados de funciones previamente calculadas para evitar ejecutarlas de nuevo cuando las necesitemos, en otras palabras, es básicamente “cachear” los resultados.&lt;/p&gt;

&lt;p&gt;Toma por ejemplo el cálculo de la sucesión de fibonacci, que como vimos, en un video anterior. Esto definido así:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Fib(0) = Fib(1) = 1
Fib(n) = Fib(n-1) + Fib(n-2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como puedes ver, para el fibonacci de 5, llega un momento en el que empezamos a calcular valores que ya tenemos, y visto de esta manera estamos únicamente calculando 5 valores diferentes de las 13 operaciones que en “realidad” tendríamos que hacer.&lt;/p&gt;

&lt;p&gt;Así que, ¿que pasa si después de calcularlo la primera vez, lo almacenamos en una tabla o en un arreglo? Así, la siguiente vez que el valor sea requerido, podemos buscar si ya existe, y si sí, devolvemos el valor ya calculado. De otro modo vamos a tener que ejecutar la función y todas las que esta llame, nuevamente.&lt;/p&gt;

&lt;p&gt;Esto funciona bastante bien cuando el costo de ejecutar una función es muy alto, y se desperdiciarían recursos calculando valores que ya hemos calculado previamente. La memorización reduce el tiempo de ejecución a costa del espacio de almacenamiento, ya que, como vimos, para evitar calcular almacena los valores. Y es benéfica cuando de atacar problemas cuyas subsoluciones se deben resolver repetidamente, con la gran ventaja de solo calcular algunas cosas unas cuantas veces.&lt;/p&gt;

&lt;p&gt;Existen lenguajes que soportan y proveen una forma sencilla de implementar esta técnica, como a través de un decorador o una palabra clave… sin embargo existen otros en los que esta se tiene que implementar manualmente mediante el uso de alguna estructura de datos como un arreglo o un árbol binario.&lt;/p&gt;

&lt;p&gt;Además, la memorización juega un rol importante en la técnica de programación conocida como programación dinámica, de la cual muy pronto haré un video.&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Nov 2017 18:00:00 +0000</pubDate>
        <link>http://thatcsharpguy.com/tv/memoizacion/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/memoizacion/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
      <item>
        <title>La escuela | #meta</title>
        <description>
</description>
        <pubDate>Wed, 06 Sep 2017 19:00:00 +0100</pubDate>
        <link>http://thatcsharpguy.com/tv/escuela/</link>
        <guid isPermaLink="true">http://thatcsharpguy.com/tv/escuela/</guid>
        
        <category>Meta</category>
        
        <category>Tv</category>
        
        
        <category>tv</category>
        
      </item>
    
  </channel>
</rss>
